{# Generic table wrapper. #}
{% macro _fractalTable(headers) %}
<table>
    <thead>
        <tr>
            {%- for head in headers %}
                <th {%- for attribute, value in head.attributes %} {{ attribute }}="{{ value }}"{% endfor %}>
                    {{ head.text }}
                </th>
            {%- endfor %}
        </tr>
    </thead>
    <tbody>
        {{- caller() if caller -}}
    </tbody>
</table>
{% endmacro %}

{# Status tags descriptions. #}
{% macro fractalStatuses(category) %}
    {% call _fractalTable([
        { text: 'Status' },
        { text: 'Description' }
    ]) %}
        {%- for key, status in category -%}
            <tr>
                <td width="25%"><span class="Status-label" style="background-color:{{ status.color }};border-color:{{ status.color }};">{{ status.label }}</span></td>
                <td>{{ status.description }}</td>
            </tr>
        {%- endfor -%}
    {% endcall %}
{% endmacro %}

{# All tokens table. #}
{% macro fractalTokens(tokens) %}
    {% call _fractalTable([
        { text: 'Token' },
        { text: 'Value' }
    ]) %}
        {%- for title, section in tokens -%}
            {%- if title != 'tokens' -%}
                <tr>
                    <th colspan="2">{{ title }}</th>
                </tr>
            {%- endif -%}
            {%- for key, value in section -%}
                <tr>
                    <td width="50%"><code>{{ key }}</code></td>
                    <td>{{ value }}</td>
                </tr>
            {%- endfor -%}
        {%- endfor -%}
    {% endcall %}
{% endmacro %}

{# Single colour swatches list. #}
{% macro fractalColoursSingle(tokens) %}
    {% call _fractalTable([
        { text: 'Token' },
        { text: 'Value', attributes: { 'colspan': 2 } }
    ]) %}
        {%- for key, value in tokens -%}
            <tr>
                <td width="50%"><code>{{ key }}</code></td>
                <td width="20"><span class="Fractal-Swatch" style="background-color:{{ value }}"></span></td>
                <td>{{ value }}</td>
            </tr>
        {%- endfor -%}
    {% endcall %}
{% endmacro %}

{% macro fractalTyperun(tokenType, tokens, text) %}
    {% call _fractalTable([
        { text: 'Token' },
        { text: 'Preview' }
    ]) %}
        {%- for key, data in tokens -%}
            <tr>
                <td width="20%"><code>{{ key }}</code> {{ longPreview | dump }}</td>
                <td>
                    <div class="Fractal-Typerun__preview" style="{{ tokenType }}: {{ data.value }}">
                        {{- text -}}
                    </div>
                </td>
            </tr>
        {%- endfor -%}
    {% endcall %}
{% endmacro %}